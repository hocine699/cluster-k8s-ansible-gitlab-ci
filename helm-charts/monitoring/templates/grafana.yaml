{{- if .Values.grafana.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: {{ .Values.grafana.replicas }}
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
        ports:
        - containerPort: {{ .Values.network.grafanaPort }}
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: {{ .Values.grafana.admin.username }}
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: {{ .Values.grafana.admin.password }}
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        resources:
          {{- toYaml .Values.resources.grafana | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.network.grafanaPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: {{ .Values.network.grafanaPort }}
          initialDelaySeconds: 60
          periodSeconds: 30
      volumes:
      - name: grafana-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitoring
  labels:
    app: grafana
spec:
  type: {{ .Values.grafana.service.type }}
  ports:
  - port: {{ .Values.grafana.service.port }}
    targetPort: {{ .Values.network.grafanaPort }}
    {{- if eq .Values.grafana.service.type "NodePort" }}
    nodePort: {{ .Values.grafana.service.nodePort }}
    {{- end }}
  selector:
    app: grafana
{{- end }}